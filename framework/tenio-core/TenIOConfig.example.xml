<?xml version="1.0" encoding="UTF-8"?>

<!-- The MIT License Copyright (c) 2016-2021 kong <congcoi123@gmail.com> 
	Permission is hereby granted, free of charge, to any person obtaining a copy 
	of this software and associated documentation files (the "Software"), to 
	deal in the Software without restriction, including without limitation the 
	rights to use, copy, modify, merge, publish, distribute, sublicense, and/or 
	sell copies of the Software, and to permit persons to whom the Software is 
	furnished to do so, subject to the following conditions: The above copyright 
	notice and this permission notice shall be included in all copies or substantial 
	portions of the Software. THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY 
	OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
	OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, 
	DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, 
	ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
	DEALINGS IN THE SOFTWARE. -->

<Server>

	<Properties>
		<!-- The server name -->
		<Property name="server-name">TenIO Core</Property>
		<!-- The server id (module name) -->
		<Property name="server-id">tenio-core</Property>
		<!-- This current version code of your server in integer type (can be compared) -->
		<Property name="version-code">1</Property>
		<!-- This current version name of your server in string type -->
		<Property name="version-name">1.0</Property>
	</Properties>

	<Implements>
		<Class name="packet-encrypter">com.tenio.core.network.zero.codec.encryption.DefaultBinaryPacketEncrypter
		</Class>
		<Class name="packet-compressor">com.tenio.core.network.zero.codec.compression.DefaultBinaryPacketCompressor
		</Class>
		<Class name="packet-encoder">com.tenio.core.network.zero.codec.encoder.DefaultBinaryPacketEncoder
		</Class>
		<Class name="packet-decoder">com.tenio.core.network.zero.codec.decoder.DefaultBinaryPacketDecoder
		</Class>
		<Class name="connection-filter">com.tenio.core.network.security.filter.DefaultConnectionFilter
		</Class>
		<Class name="packet-queue-policy">com.tenio.core.network.entities.packet.policy.DefaultPacketQueuePolicy
		</Class>
	</Implements>

	<Network>
		<Sockets>
			<Port name="socket" type="tcp">8032</Port>
			<Port name="websocket" type="websocket">8033</Port>
			<Port name="datagram" type="udp">8034</Port>
		</Sockets>
		<Properties>
			<Property name="websocket-using-ssl">false</Property>
			<Property name="websocket-sender-buffer-size">1024</Property>
			<Property name="websocket-receiver-buffer-size">1024</Property>
			<Property name="socket-acceptor-buffer-size">1024</Property>
			<Property name="socket-reader-buffer-size">1024</Property>
			<Property name="socket-writer-buffer-size">1024</Property>
		</Properties>
		<Http>
			<Port name="main" value="9999">
				<Path name="get" desc="retrieve a value" version="1"
					method="get">/retrieve/*</Path>
				<Path name="add" desc="add a new value" version="1"
					method="post">/add/*</Path>
				<Path name="change" desc="change a current value" version="1"
					method="put">/change/*</Path>
				<Path name="delete" desc="delete a existing value" version="1"
					method="delete">/delete/*</Path>
			</Port>
		</Http>
	</Network>

	<Configuration>
		<Workers>
			<Worker name="socket-acceptor">1</Worker>
			<Worker name="socket-reader">2</Worker>
			<Worker name="socket-writer">2</Worker>
			<Worker name="websocket-producer">1</Worker>
			<Worker name="websocket-consumer">2</Worker>
			<Worker name="internal-processor">2</Worker>
		</Workers>
		<Schedules>
			<!-- Get the period checking in seconds which server can keep the empty 
				room -->
			<Task name="removed-room-scan-interval">30</Task>	<!-- Unit: Seconds -->
			<!-- The period checking player time out in seconds -->
			<Task name="disconnected-player-scan-interval">45</Task>		<!-- Unit: Seconds -->
			<!-- The period checking CCU in seconds -->
			<Task name="ccu-scan-interval">60</Task>			<!-- Unit: Seconds -->
			<!-- Schedule detecting deadlocked threads -->
			<Task name="deadlock-scan-interval">60</Task>			<!-- Unit: Seconds -->
			<!-- The delay between two computations of performances for channels or 
				0 if no statics are to be computed -->
			<Task name="traffic-counter-interval">60</Task>	<!-- Unit: Seconds -->
			<!-- The period monitoring system -->
			<Task name="system-monitoring-interval">60</Task>		<!-- Unit: Seconds -->
		</Schedules>
		<Properties>
			<!-- When the server get disconnection of one client, can be hold its 
				player instance until timeout -->
			<Property name="keep-player-on-disconnection">true</Property>
			<!-- The maximum number of players which game can handle -->
			<Property name="max-number-players">1000</Property>
			<!-- The maximum number of rooms which game can handle -->
			<Property name="max-number-rooms">1000</Property>
			<!-- The max IDLE time in seconds which server can wait from the last 
				getting message from client -->
			<Property name="max-player-idle-time">180</Property>		<!-- Unit: Seconds -->
			<!-- Allow to replace the current session with another -->
			<Property name="allow-change-session">false</Property>
		</Properties>
	</Configuration>

	<!-- Your customize configurations -->
	<Extension>
		<Properties>
			<Property name="custom-value-1">String</Property>
			<Property name="custom-value-2">1</Property>
			<Property name="custom-value-3">1.5</Property>
			<Property name="custom-value-4">True</Property>
		</Properties>
	</Extension>

</Server>