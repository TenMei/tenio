<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.github.congcoi123</groupId>
	<artifactId>tenio-network</artifactId>
	<version>4.0.0</version>
	<packaging>jar</packaging>

	<name>${project.groupId}:${project.artifactId}</name>
	<description>
        TenIO is a java NIO (Non-blocking I/O) based server specifically designed for multiplayer games.
        It supports UDP and TCP transports which are handled by Netty for high-speed network transmission.
        It uses MsgPack for compressing data so that can be transferred quickly through the network.
        This framework can help you quickly create a game server or integrate it into your system.
    </description>
	<url>https://github.com/congcoi123/tenio</url>

	<licenses>
		<license>
			<name>MIT License</name>
			<url>https://github.com/congcoi123/tenio/blob/master/LICENSE</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Kong</name>
			<email>congcoi123@gmail.com</email>
			<organization>Kong</organization>
			<organizationUrl>https://congcoi123.dev</organizationUrl>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:git://github.com/congcoi123/tenio.git</connection>
		<developerConnection>scm:git:ssh://github.com:congcoi123/tenio.git</developerConnection>
		<url>https://github.com/congcoi123/tenio/tree/master</url>
	</scm>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<io.netty.version>4.1.50.Final</io.netty.version>
		<org.eclipse.jetty.version>9.4.29.v20200521</org.eclipse.jetty.version>
		<javax.servlet.version>2.5</javax.servlet.version>
		<org.msgpack.version>0.6.12</org.msgpack.version>
		<google.guava.version>29.0-jre</google.guava.version>
		<logging.log4j.version>2.13.3</logging.log4j.version>

		<org.junit.jupiter.version>5.6.2</org.junit.jupiter.version>
		<org.junit.platform.version>1.6.2</org.junit.platform.version>

		<maven.compiler.plugin.version>3.8.0</maven.compiler.plugin.version>
		<jdk.release>11</jdk.release>
		<jdk.vendor>oracle</jdk.vendor>

		<maven.source.plugin.version>3.0.1</maven.source.plugin.version>
		<maven.javadoc.plugin.version>3.0.1</maven.javadoc.plugin.version>
		<maven.gpg.plugin.version>1.6</maven.gpg.plugin.version>
		<jacoco.maven.plugin.version>0.8.2</jacoco.maven.plugin.version>
		<coveralls.maven.plugin.version>4.3.0</coveralls.maven.plugin.version>

		<maven.compiler.target>11</maven.compiler.target>
		<maven.compiler.source>11</maven.compiler.source>

	</properties>

	<dependencies>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-all</artifactId>
			<version>${io.netty.version}</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
			<version>${org.eclipse.jetty.version}</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
			<version>${org.eclipse.jetty.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${javax.servlet.version}</version>
		</dependency>

		<dependency>
			<groupId>org.msgpack</groupId>
			<artifactId>msgpack</artifactId>
			<version>${org.msgpack.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${google.guava.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${logging.log4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${org.junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${org.junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.junit.platform/junit-platform-runner -->
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-runner</artifactId>
			<version>${org.junit.platform.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.junit.platform/junit-platform-launcher -->
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<version>${org.junit.platform.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<distributionManagement>
		<snapshotRepository>
			<id>sonatype-nexus-snapshots</id>
			<name>Sonatype Nexus Snapshots</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>sonatype-nexus-staging</id>
			<name>Nexus Release Repository</name>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
		</repository>
	</distributionManagement>

	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>
		<plugins>
			<!-- Compiler -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>
			<!-- Attach source jars -->
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven.source.plugin.version}</version>
				<executions>
					<execution>
						<id>attach-source</id>
						<phase>compile</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Attach javadoc jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven.javadoc.plugin.version}</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Sign artifacts for uploading to maven central -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>${maven.gpg.plugin.version}</version>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- jacoco report -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.maven.plugin.version}</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- coveralls service -->
			<plugin>
				<groupId>org.eluder.coveralls</groupId>
				<artifactId>coveralls-maven-plugin</artifactId>
				<version>${coveralls.maven.plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>javax.xml.bind</groupId>
						<artifactId>jaxb-api</artifactId>
						<version>2.2.3</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

</project>